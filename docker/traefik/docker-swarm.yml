version: '3.9'

services:
  traefik:
    image: traefik:v3.0
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - "8080:8080" # Dashboard
      - "8082:8082" # metrics
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "20"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/traefik.yml:/etc/traefik/traefik.yml
      - ./config/vhost:/etc/traefik/vhost
      - ./certs:/etc/certs
      - ./logs:/var/log/traefik
      - ./acme/acme.json:/etc/traefik/acme.json
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"

  grafana:
    image: grafana/grafana:latest
    deploy:
      replicas: 1
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "8100:3000"
    volumes:
      - grafana-storage:/var/lib/grafana  # 添加卷挂载
    networks:
      - traefik_net

  prometheus: #推荐grafana面板导入id=17035/4475
    image: prom/prometheus:latest
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-storage:/prometheus  # 数据持久化挂载
    ports:
      - "9090:9090"
    networks:
      - traefik_net

  consul:
    image: hashicorp/consul
    deploy:
      replicas: 1
    environment:
      - CONSUL_LOCAL_CONFIG={"acl":{"enabled":true,"default_policy":"deny","enable_token_persistence":true,"tokens":{"master":"admin","agent":"admin"}}}
    command: agent -server -bootstrap-expect=1 -client=0.0.0.0 -ui -bind=127.0.0.1
    ports:
      - "8500:8500"  # Consul UI
      - "8600:8600"  # DNS
    volumes:
      - consul-data:/consul/data
    networks:
      - traefik_net

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    deploy:
      replicas: 1  # Swarm 模式下设置副本数
      placement:
        constraints:
          - node.role == manager  # 使 Loki 运行在 Swarm Manager 节点上
    ports:
      - "3100:3100"  # Loki API端口
    volumes:
      - loki-data:/data/loki  # 持久化存储 Loki 数据
      - ./loki/config.yaml:/etc/loki/loki-config.yaml  # Loki 配置文件挂载
    networks:
      - traefik_net

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager  # 使 Promtail 运行在 Swarm Manager 节点上
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml  # Promtail 配置文件挂载
      - ./logs:/var/log/traefik  # Traefik 日志目录挂载
    networks:
      - traefik_net

networks:
  traefik_net:
    external: true

volumes:
  consul-data:
  grafana-storage:
  prometheus-storage:
  loki-data: